package Classes;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JToolBar.Separator;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.neo4j.driver.Result;

/**
 *
 * @author Pedro
 */
public class PostsPanel extends javax.swing.JPanel {
    
    private ImageIcon POST_IMAGE_TO_SAVE;
    private String Rutaimagen="";
    private String Rutaimagen_conID;
    private boolean yaTieneFoto=false;
    private final String uuid;
    
    public PostsPanel(String firstName){
        initComponents();
        this.PostImagePreview.setVisible(false);
        this.NewPostLabel.setText("¿Qué estás pensando, " + firstName + "?");
        this.setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
        this.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
        this.add(new Separator(new Dimension(10, 30)));
        uuid=Create_uuid();
    }
    
    public void addPost(ImageIcon profilePicture, Date date, String user, String postContent, ImageIcon image,String ID){
        this.add(new Post(profilePicture, date, user, postContent, image,ID));
        this.add(new Separator(new Dimension(10, 10)));
    }
    
    public void addPost(ImageIcon profilePicture, Date date, String user, String postContent,String ID){
        this.add(new Post(profilePicture, date, user, postContent,ID));
        this.add(new Separator(new Dimension(10, 10)));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NewPostPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PostContentArea = new javax.swing.JTextArea();
        NewPostLabel = new javax.swing.JLabel();
        AttachmentButton = new javax.swing.JButton();
        SendMessageButton = new javax.swing.JButton();
        PostImagePreview = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));
        setForeground(new java.awt.Color(51, 51, 51));

        NewPostPanel.setBackground(new java.awt.Color(102, 102, 102));
        NewPostPanel.setMaximumSize(new java.awt.Dimension(1081, 133));
        NewPostPanel.setMinimumSize(new java.awt.Dimension(1081, 133));

        PostContentArea.setBackground(new java.awt.Color(80, 80, 80));
        PostContentArea.setColumns(20);
        PostContentArea.setFont(new java.awt.Font("Leelawadee UI", 0, 18)); // NOI18N
        PostContentArea.setForeground(new java.awt.Color(255, 255, 255));
        PostContentArea.setLineWrap(true);
        PostContentArea.setRows(5);
        PostContentArea.setCaretColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(PostContentArea);

        NewPostLabel.setBackground(new java.awt.Color(102, 102, 102));
        NewPostLabel.setFont(new java.awt.Font("Leelawadee", 1, 24)); // NOI18N
        NewPostLabel.setForeground(new java.awt.Color(255, 255, 255));
        NewPostLabel.setText("¿Qué estás pensando, DEFAULT USER?");

        AttachmentButton.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        AttachmentButton.setForeground(new java.awt.Color(255, 255, 255));
        AttachmentButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ATTACHMENT_ICON.png"))); // NOI18N
        AttachmentButton.setBorder(null);
        AttachmentButton.setBorderPainted(false);
        AttachmentButton.setContentAreaFilled(false);
        AttachmentButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AttachmentButton.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        AttachmentButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        AttachmentButton.setIconTextGap(15);
        AttachmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttachmentButtonActionPerformed(evt);
            }
        });

        SendMessageButton.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        SendMessageButton.setForeground(new java.awt.Color(255, 255, 255));
        SendMessageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/SEND_BUTTON_ICON.png"))); // NOI18N
        SendMessageButton.setBorder(null);
        SendMessageButton.setBorderPainted(false);
        SendMessageButton.setContentAreaFilled(false);
        SendMessageButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SendMessageButton.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        SendMessageButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        SendMessageButton.setIconTextGap(15);
        SendMessageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendMessageButtonActionPerformed(evt);
            }
        });

        PostImagePreview.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/DEFAULT_POST_IMAGE.png"))); // NOI18N
        PostImagePreview.setAlignmentX(0.5F);

        javax.swing.GroupLayout NewPostPanelLayout = new javax.swing.GroupLayout(NewPostPanel);
        NewPostPanel.setLayout(NewPostPanelLayout);
        NewPostPanelLayout.setHorizontalGroup(
            NewPostPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewPostPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NewPostPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NewPostLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 1069, Short.MAX_VALUE)
                    .addGroup(NewPostPanelLayout.createSequentialGroup()
                        .addGroup(NewPostPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(NewPostPanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 905, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AttachmentButton)
                                .addGap(18, 18, 18)
                                .addComponent(SendMessageButton))
                            .addComponent(PostImagePreview, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        NewPostPanelLayout.setVerticalGroup(
            NewPostPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewPostPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NewPostLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NewPostPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AttachmentButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(SendMessageButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PostImagePreview, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(NewPostPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(NewPostPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SendMessageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendMessageButtonActionPerformed
        // VERIFICAR QUE EL CONTENIDO NO ESTÉ VACÍO,
        if(PostContentArea.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"Tiene que escribir algo.");
        }else{
            
            if(this.yaTieneFoto){
           BinaryDiary.database.QueryExecutor("Create(p:publicacion{Id_Publicacion:'"+uuid+"',Fecha:datetime(),Contenido:'"+PostContentArea.getText()+"',Foto_Publicacion:'"+Rutaimagen+"'})");
          BinaryDiary.database.QueryExecutor("match(u:usuario),(p:publicacion) where u.Email='"+BinaryDiary.userEmail+"'and p.Id_Publicacion='"+uuid+"' create (u)-[:MAKES_POST]->(p)");
                
               
          
            }else{
                 BinaryDiary.database.QueryExecutor("Create(p:publicacion{Id_Publicacion:'"+uuid+"',Fecha:datetime(),Contenido:'"+PostContentArea.getText()+"'}) ");
                
                  
                     BinaryDiary.database.QueryExecutor("match(u:usuario),(p:publicacion) where u.Email='"+BinaryDiary.userEmail+"'and p.Id_Publicacion='"+uuid+"' create (u)-[:MAKES_POST]->(p)");
                     
            }
        }
        // ES DECIR, QUE NO SE PUEDA IR VACÍA UNA PUBLICACION !!
        BinaryDiary.refreshPosts();
    }//GEN-LAST:event_SendMessageButtonActionPerformed

    private void AttachmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttachmentButtonActionPerformed
        // FILE CHOOSER
         JFileChooser buscar = new JFileChooser("C:\\Users\\emman\\Downloads");
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("jpg", "png","jpeg");
        buscar.setFileFilter(filtro);
        ImageIcon imagen = new ImageIcon();
        int a = buscar.showOpenDialog(this);
        if (a == JFileChooser.APPROVE_OPTION) {
            File archivo = buscar.getSelectedFile();
            String nombre = archivo.getName();
            String ruta = archivo.getParent();
             Rutaimagen = ruta + "\\" + nombre;
             
             System.out.println(Rutaimagen);
      
                 String Usuario="emmanuel.walter11@gmail.com";
                 
                  String s = ".//data//"+uuid+".jpg";
                  
               
                    
                // imageURL = new URL("file:\\"+Rutaimagen);
                 try {
                  BufferedImage bi=ImageIO.read(new File(Rutaimagen));
          
               //  bi = ImageIO.read(new File(s));
                  ImageIO.write(bi, "jpg", new File(s));
                   imagen = new ImageIcon(s);
                   Rutaimagen=s;
             } catch (IOException ex) {
                 Logger.getLogger(PostsPanel.class.getName()).log(Level.SEVERE, null, ex);
             }
                
           
         PostImagePreview.setIcon(processImage(imagen, 400, 400));
        PostImagePreview.setVisible(true);
        this.yaTieneFoto=true;
        }
    }//GEN-LAST:event_AttachmentButtonActionPerformed

    private ImageIcon processImage(ImageIcon image, int width, int height){
        return new ImageIcon(image.getImage().getScaledInstance(width, height, Image.SCALE_FAST));
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AttachmentButton;
    private javax.swing.JLabel NewPostLabel;
    private javax.swing.JPanel NewPostPanel;
    private javax.swing.JTextArea PostContentArea;
    private javax.swing.JLabel PostImagePreview;
    private javax.swing.JButton SendMessageButton;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private String Create_uuid(){
        String retval="";
        Result r = BinaryDiary.database.QueryExecutor("return apoc.create.uuid()");
        retval=r.next().get(0).asString().replace("\"","");
        return retval;
    }
    
}
